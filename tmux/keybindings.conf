# Prefix Key: rebind to C-a.
unbind C-a
set -g prefix C-a

# The above is global. When using nested tmux sessions, the prefix for a
# particular pane can be adjusted using `C-Space :` and then 
# `set -p prefix <new prefix>`
# to avoid conflict.


# Reload this config file on-demand.

unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded ~/.tmux.conf"

# Pane splitting

# v and h are not bound by default, but to be forward compatible:
unbind v
unbind h

unbind %	# default for vertical split
unbind '"'	# default for horizontal split

bind | split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"


# Navigating between panes
unbind Up
unbind Down
unbind Left
unbind Right

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" 'send-keys C-a h'  'select-pane -L'
bind-key j if-shell "$is_vim" 'send-keys C-a j'  'select-pane -D'
bind-key k if-shell "$is_vim" 'send-keys C-a k'  'select-pane -U'
bind-key l if-shell "$is_vim" 'send-keys C-a l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key 'C-p' if-shell \"$is_vim\" 'send-keys C-w p'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key 'C-p' if-shell \"$is_vim\" 'send-keys C-w p'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Vi movement in "Copy Mode"
set-window-option -g mode-keys vi 

# Copy and paste into the system clipboard instead of the `paste buffer`
unbind -T copy-mode-vi Space; 	# Default for begin-selection
unbind -T copy-mode-vi Enter;	# Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# personal key maps and key sequences
# https://stackoverflow.com/a/53418329

bind-key -Tmy-keys t split-window -hl 80 -c "#{pane_current_path}"
bind-key -Tmy-keys r resize-pane -x 80
bind-key -Troot C-Space switch-client -Tmy-keys
