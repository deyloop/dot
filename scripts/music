#!/usr/bin/bash
set -e

: "${XDG_DATA_HOME:="$HOME/.local/share"}"

# Starts playing music from a youtube stream inside a tmux session
# Depends on
# - socat
# - mpv

STREAM_LIST="$XDG_DATA_HOME/cmd-music/streams-list"
MPV_SOCKET="/tmp/mpvsocket"

_stop_stream() {
  # attempt to stop the music if its playing
  # existence of the socket file means mpv is reading from it
  if [[ -S $MPV_SOCKET ]]; then
    echo '{ "command": ["stop"] }' | socat - "$MPV_SOCKET" &>/dev/null
  fi
}

_quit_mpv() {
  # existence of the socket file means mpv is reading from it
  if [[ -S $MPV_SOCKET ]]; then
    # Stop the music first
    echo '{ "command": ["quit"] }' | socat - "$MPV_SOCKET" &>/dev/null
    sleep 1
    rm "$MPV_SOCKET"
  fi
}

_start_mpv() {
  if [[ ! -S $MPV_SOCKET ]]; then
    mpv --idle --input-ipc-server="$MPV_SOCKET" &>/dev/null &
    sleep 5
  fi
}

_play_stream() {
  local url
  url="$1"
  
  if [[ -n $url ]]; then
    _start_mpv
    echo '{ "command": ["set", "vid", "no"] }' | socat - "$MPV_SOCKET" &>/dev/null
    echo "{ \"command\": [\"loadfile\", \"$url\"] }" | socat - "$MPV_SOCKET" &>/dev/null
  fi
}


_stream(){
  local stream_search_term
  stream_search_term="$*"

  # We take the music from a file in XDG_DATA_HOME/cmd-music/streams.lst
  if [[ -f $STREAM_LIST ]]; then
    local stream
    stream="$(grep -i "${stream_search_term//\ /\.\*}" "$STREAM_LIST" | shuf | head -1)"
    
    if [[ -z $stream ]]; then
      echo "No stream found" >&2
      return 1
    fi

    if [[ $stream =~ ^(\".*\")[[:space:]]*(.*)$ ]]; then
      local stream_name="${BASH_REMATCH[1]}"
      local stream_url="${BASH_REMATCH[2]}"
      
      _play_stream "$stream_url"

      echo "Playing $stream_name"
    else 
      return 2
    fi
  fi
}

_play() {
  local file
  file="${*:-"$HOME/music"}"
  _start_mpv
  echo '{ "command": ["set", "shuffle", "yes"] }' | socat - "$MPV_SOCKET" &>/dev/null
  echo "{ \"command\": [\"loadfile\", \"$file\"] }" | socat - "$MPV_SOCKET" #&>/dev/null
}

_list(){
  while IFS= read -r line; do
    echo "${line% *}"
  done <"$STREAM_LIST"
}

_next(){
  echo '{ "command": ["playlist-next"] }' | socat - "$MPV_SOCKET" &>/dev/null
}

_prev(){
  echo '{ "command": ["playlist-prev"] }' | socat - "$MPV_SOCKET" &>/dev/null
}

_edit() {
  exec ${EDITOR:-vim} "$STREAM_LIST"
}

_music() {

  local cmd
  if [[ -n "$1" ]]; then
    cmd="$1"; shift
  fi
  case "$cmd" in
    ""|stream) _stream "$@" ;;
    play) _play "$@" ;;
    stop) _stop_stream ;;
    quit) _quit_mpv ;;
    edit) _edit ;;
    list) _list ;;
    next) _next ;;
    prev) _prev ;;
    help|*) 
      echo "USAGE:"
      echo "music"
      echo "music steam [stream_name]"
      echo "music play [song_name|directory_name]"
      echo "music stop"
      echo "music edit"
      echo "music list"
      return 3
      ;;
  esac
}

_music "$@"
